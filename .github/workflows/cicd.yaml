name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    strategy:
      matrix:
        include:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            extension: ""

          - os-name: Linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl
            extension: ""

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            extension: ".exe"

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
            extension: ""

          - os-name: macOS-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
            extension: ""

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tests ${{ matrix.os-name }}
        uses: houseabsolute/actions-rust-cross@v1.0.4
        with:
          command: test
          target: ${{ matrix.target }}
          args: "--locked --release"

      - name: Build ${{ matrix.os-name }} binary
        uses: houseabsolute/actions-rust-cross@v1.0.4
        with:
          command: build
          target: ${{ matrix.target }}
          args: "--locked --release"
          strip: true

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os-name }}
          path: target/${{ matrix.target }}/release/pngme${{ matrix.extension }}
          retention-days: 1


  bump-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: ci
    permissions: write-all
    outputs:
      new-tag: ${{ steps.autotag.outputs.new-tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: phish108/autotag-action@v1.1.64
        id: autotag
        with:
          github-token: ${{ secrets.PAT }}


  create-release:
    name: Create Release
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: bump-version
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.bump-version.outputs.new-tag }}
          make_latest: true
          name: ${{ needs.bump-version.outputs.new-tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          append_body: true
          files: |
            release/**/*
